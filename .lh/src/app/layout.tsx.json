{
    "sourceFile": "src/app/layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1731246807603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731246821274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import type { Metadata } from \"next\";\n+import localFont from \"next/font/local\";\n+import \n+import \"./globals.css\";\n+\n+const geistSans = localFont({\n+  src: \"./fonts/GeistVF.woff\",\n+  variable: \"--font-geist-sans\",\n+  weight: \"100 900\",\n+});\n+const geistMono = localFont({\n+  src: \"./fonts/GeistMonoVF.woff\",\n+  variable: \"--font-geist-mono\",\n+  weight: \"100 900\",\n+});\n+\n+export const metadata: Metadata = {\n+  title: \"Create Next App\",\n+  description: \"Generated by create next app\",\n+};\n+\n+export default function RootLayout({\n+  children,\n+}: Readonly<{\n+  children: React.ReactNode;\n+}>) {\n+  return (\n+    <html lang=\"en\">\n+      <body className={`${geistSans.variable} ${geistMono.variable}`}>\n+        <Navbar />\n+        {children}\n+      </body>\n+    </html>\n+  );\n+}\n"
                },
                {
                    "date": 1731247249643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import type { Metadata } from \"next\";\n import localFont from \"next/font/local\";\n-import \n+import Navbar from \"@/component/navbar\";\n import \"./globals.css\";\n \n const geistSans = localFont({\n   src: \"./fonts/GeistVF.woff\",\n@@ -32,38 +32,4 @@\n       </body>\n     </html>\n   );\n }\n-import type { Metadata } from \"next\";\n-import localFont from \"next/font/local\";\n-import \"./globals.css\";\n-\n-const geistSans = localFont({\n-  src: \"./fonts/GeistVF.woff\",\n-  variable: \"--font-geist-sans\",\n-  weight: \"100 900\",\n-});\n-const geistMono = localFont({\n-  src: \"./fonts/GeistMonoVF.woff\",\n-  variable: \"--font-geist-mono\",\n-  weight: \"100 900\",\n-});\n-\n-export const metadata: Metadata = {\n-  title: \"Create Next App\",\n-  description: \"Generated by create next app\",\n-};\n-\n-export default function RootLayout({\n-  children,\n-}: Readonly<{\n-  children: React.ReactNode;\n-}>) {\n-  return (\n-    <html lang=\"en\">\n-      <body className={`${geistSans.variable} ${geistMono.variable}`}>\n-        <\n-        {children}\n-      </body>\n-    </html>\n-  );\n-}\n"
                },
                {
                    "date": 1731247410604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import type { Metadata } from \"next\";\n+import localFont from \"next/font/local\";\n+import nav\n+import \"./globals.css\";\n+\n+const geistSans = localFont({\n+  src: \"./fonts/GeistVF.woff\",\n+  variable: \"--font-geist-sans\",\n+  weight: \"100 900\",\n+});\n+const geistMono = localFont({\n+  src: \"./fonts/GeistMonoVF.woff\",\n+  variable: \"--font-geist-mono\",\n+  weight: \"100 900\",\n+});\n+\n+export const metadata: Metadata = {\n+  title: \"Create Next App\",\n+  description: \"Generated by create next app\",\n+};\n+\n+export default function RootLayout({\n+  children,\n+}: Readonly<{\n+  children: React.ReactNode;\n+}>) {\n+  return (\n+    <html lang=\"en\">\n+      <body className={`${geistSans.variable} ${geistMono.variable}`}>\n+        <Navbar />\n+        {children}\n+      </body>\n+    </html>\n+  );\n+}\n"
                },
                {
                    "date": 1731247757708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import type { Metadata } from \"next\";\n import localFont from \"next/font/local\";\n-import \n+import n\n import \"./globals.css\";\n \n const geistSans = localFont({\n   src: \"./fonts/GeistVF.woff\",\n"
                },
                {
                    "date": 1731247765348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import type { Metadata } from \"next\";\n+import localFont from \"next/font/local\";\n+import Navbar from \"@/component/navbar\";\n+import \"./globals.css\";\n+\n+const geistSans = localFont({\n+  src: \"./fonts/GeistVF.woff\",\n+  variable: \"--font-geist-sans\",\n+  weight: \"100 900\",\n+});\n+const geistMono = localFont({\n+  src: \"./fonts/GeistMonoVF.woff\",\n+  variable: \"--font-geist-mono\",\n+  weight: \"100 900\",\n+});\n+\n+export const metadata: Metadata = {\n+  title: \"Create Next App\",\n+  description: \"Generated by create next app\",\n+};\n+\n+export default function RootLayout({\n+  children,\n+}: Readonly<{\n+  children: React.ReactNode;\n+}>) {\n+  return (\n+    <html lang=\"en\">\n+      <body className={`${geistSans.variable} ${geistMono.variable}`}>\n+        <Navbar />\n+        {children}\n+      </body>\n+    </html>\n+  );\n+}\n"
                }
            ],
            "date": 1731246807603,
            "name": "Commit-0",
            "content": "import type { Metadata } from \"next\";\nimport localFont from \"next/font/local\";\nimport \"./globals.css\";\n\nconst geistSans = localFont({\n  src: \"./fonts/GeistVF.woff\",\n  variable: \"--font-geist-sans\",\n  weight: \"100 900\",\n});\nconst geistMono = localFont({\n  src: \"./fonts/GeistMonoVF.woff\",\n  variable: \"--font-geist-mono\",\n  weight: \"100 900\",\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body className={`${geistSans.variable} ${geistMono.variable}`}>\n        <\n        {children}\n      </body>\n    </html>\n  );\n}\n"
        }
    ]
}